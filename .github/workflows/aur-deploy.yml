name: Deploy AUR Packages

on:
  push:
    paths:
      - 'aur-packages/**'
    branches:
      - v3.0
  workflow_dispatch:

jobs:
  deploy-meowrch-settings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Prepare PKGBUILD for deployment
        id: prepare_settings
        run: |
          # Get package info
          PKGNAME=$(grep '^pkgname=' aur-packages/meowrch-settings/PKGBUILD | cut -d'=' -f2)
          PKGVER=$(grep '^pkgver=' aur-packages/meowrch-settings/PKGBUILD | cut -d'=' -f2)
          PKGREL=$(grep '^pkgrel=' aur-packages/meowrch-settings/PKGBUILD | cut -d'=' -f2)
          
          # Create unique archive name
          ARCHIVE_NAME="${PKGNAME}-${PKGVER}-${PKGREL}.tar.gz"
          
          # Export for next step
          echo "archive_name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT
          
          # Create deploy copy with unique source name
          cp aur-packages/meowrch-settings/PKGBUILD aur-packages/meowrch-settings/PKGBUILD.deploy
          sed -i "s|\$url/archive/refs/heads/v3.0.tar.gz|\$url/archive/refs/heads/v3.0.tar.gz#/${ARCHIVE_NAME}|" aur-packages/meowrch-settings/PKGBUILD.deploy
          
      - name: Calculate SHA256 for meowrch-settings
        id: sha256_settings
        run: |
          URL="https://github.com/meowrch/meowrch/archive/refs/heads/v3.0.tar.gz"
          HASH=$(curl -sL "$URL" | sha256sum | cut -d' ' -f1)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          
      - name: Finalize PKGBUILD
        run: |
          # Update sha256sums in deploy version
          sed -i "s/^sha256sums=.*/sha256sums=('${{ steps.sha256_settings.outputs.hash }}')/" aur-packages/meowrch-settings/PKGBUILD.deploy
          
      - name: Deploy to AUR
        uses: KSXGitHub/github-actions-deploy-aur@master
        with:
          pkgname: meowrch-settings
          pkgbuild: aur-packages/meowrch-settings/PKGBUILD.deploy
          assets: |
            aur-packages/meowrch-settings/meowrch-settings.install
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update meowrch-settings package"
          allow_empty_commits: "true"

  deploy-meowrch-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Prepare PKGBUILD for deployment
        id: prepare_tools
        run: |
          # Get package info
          PKGNAME=$(grep '^pkgname=' aur-packages/meowrch-tools/PKGBUILD | cut -d'=' -f2)
          PKGVER=$(grep '^pkgver=' aur-packages/meowrch-tools/PKGBUILD | cut -d'=' -f2)
          PKGREL=$(grep '^pkgrel=' aur-packages/meowrch-tools/PKGBUILD | cut -d'=' -f2)
          
          # Create unique archive name
          ARCHIVE_NAME="${PKGNAME}-${PKGVER}-${PKGREL}.tar.gz"
          
          # Export for next step
          echo "archive_name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT
          
          # Create deploy copy with unique source name
          cp aur-packages/meowrch-tools/PKGBUILD aur-packages/meowrch-tools/PKGBUILD.deploy
          sed -i "s|\$url/archive/refs/heads/v3.0.tar.gz|\$url/archive/refs/heads/v3.0.tar.gz#/${ARCHIVE_NAME}|" aur-packages/meowrch-tools/PKGBUILD.deploy
          
      - name: Calculate SHA256 for meowrch-tools
        id: sha256_tools
        run: |
          URL="https://github.com/meowrch/meowrch/archive/refs/heads/v3.0.tar.gz"
          HASH=$(curl -sL "$URL" | sha256sum | cut -d' ' -f1)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          
      - name: Finalize PKGBUILD
        run: |
          # Update sha256sums in deploy version
          sed -i "s/^sha256sums=.*/sha256sums=('${{ steps.sha256_tools.outputs.hash }}')/" aur-packages/meowrch-tools/PKGBUILD.deploy
          
      - name: Deploy to AUR
        uses: KSXGitHub/github-actions-deploy-aur@master
        with:
          pkgname: meowrch-tools
          pkgbuild: aur-packages/meowrch-tools/PKGBUILD.deploy
          assets: |
            aur-packages/meowrch-tools/meowrch-tools.install
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update meowrch-tools package"
          allow_empty_commits: "true"
