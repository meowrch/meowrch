#!/bin/bash
#
# Meowrch Update Checker - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
#

set -euo pipefail

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
readonly GITHUB_API_URL="https://api.github.com/repos/meowrch/meowrch/releases"
readonly VERSION_FILE="/usr/local/share/meowrch/users/$(whoami)/version"
readonly NOTIFICATION_STATE="$HOME/.local/state/meowrch-notifications"

# –¶–≤–µ—Ç–∞
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly RED='\033[0;31m'
readonly NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[INFO]${NC} $1" >&2
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1" >&2
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
get_current_version() {
    if [[ -f "$VERSION_FILE" ]]; then
        cat "$VERSION_FILE"
    else
        echo "2.0.0"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    fi
}

# –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Å GitHub
get_latest_version() {
    curl -s "$GITHUB_API_URL" | jq -r '.[0].tag_name' | sed 's/^v//'
}

# –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Å —Ñ–∞–π–ª–æ–º –º–∏–≥—Ä–∞—Ü–∏–∏
get_latest_version_with_migration() {
    local releases
    releases=$(curl -s "$GITHUB_API_URL")
    
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Ä–µ–ª–∏–∑–∞–º –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º –∏ –∏—â–µ–º –ø–µ—Ä–≤—ã–π —Å –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º
    for version in $(echo "$releases" | jq -r '.[].tag_name' | sed 's/^v//'); do
        local migration_exists
        migration_exists=$(echo "$releases" | jq --arg version "v$version" --arg version_no_v "$version" --arg filename "migrate_to_$version.py" '
            .[] | select(.tag_name == $version or .tag_name == $version_no_v) | 
            .assets[] | select(.name == $filename) | .name'
        )
        
        if [[ -n "$migration_exists" ]]; then
            echo "$version"
            return 0
        fi
    done
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π
    return 1
}

# –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ–ª–∏–∑—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –≤–µ—Ä—Å–∏–∏
get_all_releases() {
    curl -s "$GITHUB_API_URL" | jq -r '.[].tag_name' | sed 's/^v//' | sort -V
}

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é
set_version() {
    local version="$1"
    sudo mkdir -p "$(dirname "$VERSION_FILE")"
    echo "$version" | sudo tee "$VERSION_FILE" > /dev/null
    log "‚úÖ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ $version"
}

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π (v1 > v2)
version_gt() {
    printf '%s\n%s\n' "$2" "$1" | sort -V -C
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
show_migration_preview() {
    local migration_file="$1"
    local version="$2"
    
    log "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ migrate_to_$version.py"
    log "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
    echo "" >&2
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    local temp_preview="/tmp/migration-preview-$$"
    {
        echo "==================== MIGRATION PREVIEW ===================="
        echo "–§–∞–π–ª: migrate_to_$version.py"
        echo "–í–µ—Ä—Å–∏—è: $version"
        echo "=========================================================="
        echo ""
        cat "$migration_file"
        echo ""
        echo "=========================================================="
        echo "–ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏"
    } > "$temp_preview"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ less —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–∞–∫ –≤ paru
    if command -v less > /dev/null 2>&1; then
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ less:
        # -R: –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ANSI —Ü–≤–µ—Ç–æ–≤
        # -S: –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        # -F: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Ö–æ–¥–∏—Ç—å –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω
        # -X: –Ω–µ –æ—á–∏—â–∞—Ç—å —ç–∫—Ä–∞–Ω –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        # +Gg: –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
        export LESS="-R -S -F -X"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é —á–µ—Ä–µ–∑ less
        less "$temp_preview"
    else
        # –§–æ–ª–ª–±—ç–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º –±–µ–∑ less
        warn "less –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–µ—Ä–µ–∑ cat"
        cat "$temp_preview" >&2
    fi
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$temp_preview"
    
    echo "" >&2
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏
    while true; do
        echo -ne "${YELLOW}==> –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏? [Y/n]: ${NC}" >&2
        read -r response
        case "$response" in
            ""|[Yy]|[Yy][Ee][Ss]|[–î–¥]|[–î–¥][–ê–∞])
                return 0
                ;;
            [Nn]|[Nn][Oo]|[–ù–Ω]|[–ù–Ω][–ï–µ][–¢—Ç])
                return 1
                ;;
            *)
                echo -e "${RED}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ Y (–¥–∞) –∏–ª–∏ N (–Ω–µ—Ç)${NC}" >&2
                ;;
        esac
    done
}

# –°–∫–∞—á–∞—Ç—å –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é
run_migration() {
    local version="$1"
    local temp_dir="/tmp/meowrch-update-$version"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    rm -rf "$temp_dir"
    mkdir -p "$temp_dir"
    
    log "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤–µ—Ä—Å–∏—é $version..."
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–ª–∏–∑–∞ (–ø—Ä–æ–±—É–µ–º –∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º v, –∏ –±–µ–∑)
    local release_data
    release_data=$(curl -s "$GITHUB_API_URL" | jq --arg version "v$version" --arg version_no_v "$version" '.[] | select(.tag_name == $version or .tag_name == $version_no_v)')
    
    if [[ -z "$release_data" || "$release_data" == "null" ]]; then
        error "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ $version –Ω–µ –Ω–∞–π–¥–µ–Ω"
        rm -rf "$temp_dir"
        return 1
    fi
    
    # –°–ù–ê–ß–ê–õ–ê –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
    local migration_download_url
    migration_download_url=$(echo "$release_data" | jq -r --arg filename "migrate_to_$version.py" '.assets[] | select(.name == $filename) | .browser_download_url')
    
    if [[ -z "$migration_download_url" || "$migration_download_url" == "null" ]]; then
        log "üìù –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ migrate_to_$version.py –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤–µ—Ä—Å–∏–∏ $version"
        log "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –≤–µ—Ä—Å–∏—é (–≤–µ—Ä—Å–∏—è –ù–ï –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è)"
        rm -rf "$temp_dir"
        return 0
    fi
    
    # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ö–∏–≤
    log "‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–µ—Ä—Å–∏–∏ $version"
    
    # –ü–æ–ª—É—á–∞–µ–º URL TAR.GZ –∞—Ä—Ö–∏–≤–∞ —Ä–µ–ª–∏–∑–∞ (tarball –æ–±—ã—á–Ω–æ –º–µ–Ω—å—à–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É)
    local tarball_url
    tarball_url=$(echo "$release_data" | jq -r '.tarball_url')
    
    if [[ -z "$tarball_url" || "$tarball_url" == "null" ]]; then
        error "TAR.GZ –∞—Ä—Ö–∏–≤ –¥–ª—è –≤–µ—Ä—Å–∏–∏ $version –Ω–µ –Ω–∞–π–¥–µ–Ω"
        rm -rf "$temp_dir"
        return 1
    fi
    
    log "üì¶ –°–∫–∞—á–∏–≤–∞–µ–º TAR.GZ –∞—Ä—Ö–∏–≤ —Ä–µ–ª–∏–∑–∞ $version..."
    local tar_file="$temp_dir/release.tar.gz"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    if [[ -t 2 ]]; then  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ stderr —ç—Ç–æ —Ç–µ—Ä–º–∏–Ω–∞–ª
        if ! curl -L --progress-bar "$tarball_url" -o "$tar_file"; then
            error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å TAR.GZ –∞—Ä—Ö–∏–≤ —Ä–µ–ª–∏–∑–∞"
            rm -rf "$temp_dir"
            return 1
        fi
    else
        # –ë–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤/–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        if ! curl -L -s "$tarball_url" -o "$tar_file"; then
            error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å TAR.GZ –∞—Ä—Ö–∏–≤ —Ä–µ–ª–∏–∑–∞"
            rm -rf "$temp_dir"
            return 1
        fi
    fi
    
    log "üìÇ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤..."
    if ! tar -xzf "$tar_file" -C "$temp_dir"; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å TAR.GZ –∞—Ä—Ö–∏–≤"
        rm -rf "$temp_dir"
        return 1
    fi
    
    # –ù–∞—Ö–æ–¥–∏–º —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É (GitHub —Å–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –≤–∏–¥–∞ username-reponame-commitid)
    # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É temp_dir
    local extracted_dir
    extracted_dir=$(find "$temp_dir" -maxdepth 1 -type d -name "*meowrch*" ! -path "$temp_dir" | head -n1)
    
    if [[ -z "$extracted_dir" ]]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—É—é –ø–∞–ø–∫—É —Ä–µ–ª–∏–∑–∞"
        log "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ $temp_dir:"
        ls -la "$temp_dir" >&2
        rm -rf "$temp_dir"
        return 1
    fi
    
    log "üîÑ –ù–∞–π–¥–µ–Ω–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞: $(basename "$extracted_dir")"
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏–º—è
    mv "$extracted_dir" "$temp_dir/meowrch"
    
    log "üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏..."
    local migration_file="$temp_dir/meowrch/migrate_to_$version.py"
    if ! curl -L -s "$migration_download_url" -o "$migration_file"; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏"
        rm -rf "$temp_dir"
        return 1
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if ! show_migration_preview "$migration_file" "$version"; then
        warn "–ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        rm -rf "$temp_dir"
        return 1
    fi
    
    log "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ –≤–µ—Ä—Å–∏—é $version..."
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Å —Ä–µ–ª–∏–∑–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
    cd "$temp_dir/meowrch" || {
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É —Ä–µ–ª–∏–∑–∞"
        rm -rf "$temp_dir"
        return 1
    }
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    if python3 "migrate_to_$version.py"; then
        log "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é $version –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        set_version "$version"
    else
        error "–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ –≤–µ—Ä—Å–∏—é $version –Ω–µ —É–¥–∞–ª–∞—Å—å"
        cd - >/dev/null
        rm -rf "$temp_dir"
        return 1
    fi
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    cd - >/dev/null
    rm -rf "$temp_dir"
    return 0
}


# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –≤–µ—Ä—Å–∏–∏
is_version_notified() {
    local version="$1"
    [[ -f "$NOTIFICATION_STATE" ]] && grep -q "^$version$" "$NOTIFICATION_STATE"
}

# –û—Ç–º–µ—Ç–∏—Ç—å –≤–µ—Ä—Å–∏—é –∫–∞–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–Ω—É—é
mark_version_notified() {
    local version="$1"
    mkdir -p "$(dirname "$NOTIFICATION_STATE")"
    echo "$version" >> "$NOTIFICATION_STATE"
}

# –û—Ç–º–µ—Ç–∏—Ç—å –≤–µ—Ä—Å–∏—é –∫–∞–∫ —Å–∫—Ä—ã—Ç—É—é (–Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
mark_version_hidden() {
    local version="$1"
    local hidden_file="$HOME/.local/state/meowrch-hidden"
    mkdir -p "$(dirname "$hidden_file")"
    echo "$version" >> "$hidden_file"
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–∫—Ä—ã—Ç–∞ –ª–∏ –≤–µ—Ä—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
is_version_hidden() {
    local version="$1"
    local hidden_file="$HOME/.local/state/meowrch-hidden"
    [[ -f "$hidden_file" ]] && grep -q "^$version$" "$hidden_file"
}

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
open_update_terminal() {
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤ –¥–ª—è Meowrch –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    local terminals=(
        "kitty"             # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ Meowrch
        "alacritty"         # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π
        "gnome-terminal"    # GNOME —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
        "xterm"             # Fallback
    )
    
    # –ù–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª
    local terminal_cmd=""
    local terminal_name=""
    for terminal in "${terminals[@]}"; do
        if command -v "$terminal" > /dev/null 2>&1; then
            terminal_name="$terminal"
            case "$terminal" in
                "kitty"|"alacritty")
                    terminal_cmd="$terminal -e"
                    ;;
                "gnome-terminal")
                    terminal_cmd="$terminal --"
                    ;;
                "xterm")
                    terminal_cmd="xterm -e"
                    ;;
            esac
            break
        fi
    done
    
    if [[ -z "$terminal_cmd" ]]; then
        error "–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º—É–ª—è—Ç–æ—Ä —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
        log "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é: update-meowrch update"
        return 1
    fi
    
    log "üñ•Ô∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ($terminal_name)..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
    local temp_script="/tmp/meowrch-update-terminal-$$"
    local script_path="$(which update-meowrch 2>/dev/null || echo "/usr/bin/update-meowrch")"
    
    # –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH
    if [[ "$script_path" == "/usr/bin/update-meowrch" ]] && [[ ! -f "$script_path" ]]; then
        script_path="${0}"
    fi
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é script_path –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ heredoc
    local script_path_escaped="${script_path}"
    
    cat > "$temp_script" << 'EOF'
#!/bin/bash
set -e

# –ü—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
SCRIPT_PATH="@SCRIPT_PATH@"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo -e "${CYAN}             üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´ MEOWRCH üîÑ${NC}"
echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo ""
echo -e "${YELLOW}–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...${NC}"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
if "${SCRIPT_PATH}" update; then
    echo ""
    echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}             ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û! ‚úÖ${NC}"
    echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    echo -e "${GREEN}üéâ Meowrch –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π${NC}"
else
    echo ""
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${RED}             ‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –û–ë–ù–û–í–õ–ï–ù–ò–ò! ‚ùå${NC}"
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo ""
    echo -e "${RED}üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏${NC}"
    echo -e "${YELLOW}üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ '${SCRIPT_PATH} status' –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏${NC}"
fi

echo ""
echo -e "${BLUE}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...${NC}"
read

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
rm -f "$0"
EOF
    
    # –ó–∞–º–µ–Ω—è–µ–º –º–∞—Ä–∫–µ—Ä @SCRIPT_PATH@ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
    sed -i "s|@SCRIPT_PATH@|${script_path_escaped}|g" "$temp_script"
    
    chmod +x "$temp_script"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    nohup $terminal_cmd bash "$temp_script" > /dev/null 2>&1 &
    
    log "‚úÖ –¢–µ—Ä–º–∏–Ω–∞–ª —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∑–∞–ø—É—â–µ–Ω"
}

notify_user() {
    local latest_version="$1"
    local current_version="$2"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É
    local icon_arg=""
    if [[ -f "/usr/share/pixmaps/meowrch-logo.png" ]]; then
        icon_arg="-i /usr/share/pixmaps/meowrch-logo.png"
    else
        icon_arg="-i software-update-available"
    fi
    
    # Desktop —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    if command -v notify-send > /dev/null 2>&1; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–µ–π—Å—Ç–≤–∏–π (actions) –≤ notify-send
        if notify-send --help 2>/dev/null | grep -q -- "--action"; then
            # –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–Ω–æ–ø–æ–∫
            local result
            result=$(notify-send \
                --app-name="Meowrch" \
                "–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è!" \
                "–í–µ—Ä—Å–∏—è $latest_version –≥–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ.\n–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: update-meowrch update" \
                $icon_arg \
                --urgency="critical" \
                --expire-time=0 \
                --action="update=–û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å" \
                --action="hide=–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å" \
                --action="later=–ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ" 2>/dev/null || echo "")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            case "$result" in
                "update")
                    log "üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                    open_update_terminal
                    ;;
                "hide")
                    log "üîï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤–µ—Ä—Å–∏–∏ $latest_version"
                    mark_version_hidden "$latest_version"
                    ;;
                "later"|"")
                    log "‚è∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ª–æ–∂–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
                    ;;
            esac
        else
            # –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
            notify-send \
                --app-name="Meowrch" \
                "üîÑ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è Meowrch!" \
                "–î–æ—Å—Ç—É–ø–Ω–∞ –≤–µ—Ä—Å–∏—è $latest_version (—Ç–µ–∫—É—â–∞—è: $current_version)\n\n–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: update-meowrch update" \
                $icon_arg \
                --urgency="critical" \
                --expire-time=0
        fi
    fi
    
    log "üÜï –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $latest_version (—Ç–µ–∫—É—â–∞—è: $current_version)"
    log "üí° –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: update-meowrch update"
}

check_update() {
    local current_version
    current_version=$(get_current_version)
    
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è... (—Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $current_version)"
    
    local latest_with_migration
    latest_with_migration=$(get_latest_version_with_migration)
    
    if [[ -z "$latest_with_migration" ]]; then
        log "‚úÖ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–Ω–µ—Ç –≤–µ—Ä—Å–∏–π —Å –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏)"
        return 0
    fi

    if version_gt "$latest_with_migration" "$current_version"; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫—Ä—ã—Ç–∞ –ª–∏ –≤–µ—Ä—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        if is_version_hidden "$latest_with_migration"; then
            log "‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤–µ—Ä—Å–∏–∏ $latest_with_migration —Å–∫—Ä—ã—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
            return 0
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Å–∫—Ä—ã—Ç–æ)
        if is_version_notified "$latest_with_migration"; then
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–∫—Ä—ã–ª –µ–≥–æ
            log "üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –≤–µ—Ä—Å–∏–∏ $latest_with_migration"
            notify_user "$latest_with_migration" "$current_version"
        else
            # –ü–µ—Ä–≤—ã–π –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            log "üÜï –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ $latest_with_migration"
            notify_user "$latest_with_migration" "$current_version"
            mark_version_notified "$latest_with_migration"
        fi
    else
        log "‚úÖ –£ –≤–∞—Å –ø–æ—Å–ª–µ–¥–Ω—è—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è ($current_version)"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
show_status() {
    local current_version
    current_version=$(get_current_version)
    local latest_version
    latest_version=$(get_latest_version)
    local latest_with_migration
    latest_with_migration=$(get_latest_version_with_migration)
    
    log "üìã –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $current_version"
    log "üìã –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –≤ GitHub: $latest_version"
    
    if [[ -n "$latest_with_migration" ]]; then
        log "üìã –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π: $latest_with_migration"
        
        if [[ "$current_version" == "$latest_with_migration" ]]; then
            log "‚úÖ –£ –≤–∞—Å –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏"
        elif version_gt "$latest_with_migration" "$current_version"; then
            log "üÜï –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ –≤–µ—Ä—Å–∏–∏ $latest_with_migration"
        else
            log "‚ÑπÔ∏è –í–∞—à–∞ –≤–µ—Ä—Å–∏—è –Ω–æ–≤–µ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π"
        fi
    else
        log "‚ÑπÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π —Å —Ñ–∞–π–ª–∞–º–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"
    fi
}

# –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
perform_update() {
    local current_version
    current_version=$(get_current_version)
    
    # –¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–ª—è–µ–º—Å—è —Ç–æ–ª—å–∫–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π
    local target_version
    target_version=$(get_latest_version_with_migration)
    
    if [[ -z "$target_version" ]]; then
        warn "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π —Å –º–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏"
        return 0
    fi

    log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å $current_version –¥–æ $target_version"

    if [[ "$current_version" == "$target_version" ]]; then
        log "‚úÖ –í–µ—Ä—Å–∏—è $target_version —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        return 0
    fi
    
    if ! version_gt "$target_version" "$current_version"; then
        log "‚ÑπÔ∏è –í–∞—à–∞ –≤–µ—Ä—Å–∏—è ($current_version) –Ω–µ —Å—Ç–∞—Ä—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π ($target_version)"
        return 0
    fi

    log "üìã –ü—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $current_version ‚Üí $target_version"
    log "üí° –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –±—ç–∫–∞–ø–æ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–π"

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π
    if ! run_migration "$target_version"; then
        error "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å"
        return 1
    fi

    log "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ!"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    cat << EOF
Meowrch Update Checker - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    $0 COMMAND

–ö–û–ú–ê–ù–î–´:
    check-update     –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —É–≤–µ–¥–æ–º–∏—Ç—å
    status          –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤–µ—Ä—Å–∏–π
    update          –û–±–Ω–æ–≤–∏—Ç—å—Å—è –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü–†–ò–ú–ï–†–´:
    $0 check-update      # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    $0 status           # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
    $0 update           # –û–±–Ω–æ–≤–∏—Ç—å—Å—è –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏

EOF
}

main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
    for cmd in curl jq tar python3; do
        if ! command -v "$cmd" > /dev/null 2>&1; then
            error "–¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ç–∏–ª–∏—Ç–∞: $cmd"
            exit 1
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º less (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –Ω–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
    if ! command -v less > /dev/null 2>&1; then
        warn "–£—Ç–∏–ª–∏—Ç–∞ 'less' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –§–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã —á–µ—Ä–µ–∑ 'cat'"
    fi

    local command="${1:-check-update}"
    
    case "$command" in
        check-update)
            check_update
            ;;
        status)
            show_status
            ;;
        update)
            perform_update
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command"
            show_help
            exit 1
            ;;
    esac
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
